import os
from aiogram import Bot, Dispatcher, types
from aiogram.utils import executor

# === –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è (Render) ===
BOT_TOKEN = os.getenv("BOT_TOKEN")
CHANNEL_USERNAME = os.getenv("CHANNEL_USERNAME")  # –î–æ–ª–∂–µ–Ω –±—ã—Ç—å "@LenaMustest"
YOUR_TELEGRAM_ID = int(os.getenv("YOUR_TELEGRAM_ID"))  # 1030370280

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
if not all([BOT_TOKEN, CHANNEL_USERNAME, YOUR_TELEGRAM_ID]):
    raise ValueError("‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è: BOT_TOKEN, CHANNEL_USERNAME –∏–ª–∏ YOUR_TELEGRAM_ID")

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher(bot)

# –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –æ–∂–∏–¥–∞—é—â–∏—Ö –≤–≤–æ–¥ –¥–∞—Ç—ã —Ä–æ–∂–¥–µ–Ω–∏—è
awaiting_birth_date = set()

# === /start ‚Äî –æ—Å–Ω–æ–≤–Ω–æ–π —Å—Ü–µ–Ω–∞—Ä–∏–π ===
@dp.message_handler(commands=['start'])
async def start_handler(message: types.Message):
    user = message.from_user
    user_id = user.id

    try:
        chat_member = await bot.get_chat_member(CHANNEL_USERNAME, user_id)
        if chat_member.status in ['member', 'administrator', 'creator']:
            awaiting_birth_date.add(user_id)
            await message.answer(
                "‚ú® –û—Ç–ª–∏—á–Ω–æ! –ß—Ç–æ–±—ã —Å–¥–µ–ª–∞—Ç—å —Ä–∞—Å—á—ë—Ç –ø–æ –º–∞—Ç—Ä–∏—Ü–µ —Å—É–¥—å–±—ã, –Ω–∞–ø–∏—à–∏—Ç–µ –≤–∞—à—É –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\n\n"
                "<code>–¥–¥.–º–º.–≥–≥–≥–≥</code>\n\n"
                "–ù–∞–ø—Ä–∏–º–µ—Ä: <code>15.08.1990</code>",
                parse_mode="HTML"
            )
        else:
            await message.answer(
                "üôè –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –∫–∞–Ω–∞–ª, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π —Ä–∞—Å—á—ë—Ç –ø–æ –º–∞—Ç—Ä–∏—Ü–µ —Å—É–¥—å–±—ã!",
                reply_markup=types.InlineKeyboardMarkup().add(
                    types.InlineKeyboardButton(
                        "–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª",
                        url=f"https://t.me/{CHANNEL_USERNAME[1:]}"
                    )
                )
            )
    except Exception as e:
        print("–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏:", e)
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

# === –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–∞ (–¥–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è) ===
@dp.message_handler(content_types=types.ContentType.TEXT)
async def handle_text(message: types.Message):
    user = message.from_user
    user_id = user.id

    if user_id in awaiting_birth_date:
        birth_date = message.text.strip()
        if len(birth_date) >= 8 and birth_date.replace('.', '').replace(' ', '').isdigit():
            username = f"@{user.username}" if user.username else f"ID{user_id}"
            await bot.send_message(
                YOUR_TELEGRAM_ID,
                f"üÜï –ù–æ–≤—ã–π –ª–∏–¥!\n\n"
                f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {username}\n"
                f"–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è: <code>{birth_date}</code>\n\n"
                f"–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å –µ–º—É –≤—Ä—É—á–Ω—É—é.",
                parse_mode="HTML"
            )
            awaiting_birth_date.discard(user_id)
            await message.answer("‚úÖ –°–ø–∞—Å–∏–±–æ! –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞. –°–∫–æ—Ä–æ —è —Å–≤—è–∂—É—Å—å —Å –≤–∞–º–∏ –¥–ª—è —Ä–∞—Å—á—ë—Ç–∞.")
        else:
            await message.answer("‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ <code>–¥–¥.–º–º.–≥–≥–≥–≥</code>", parse_mode="HTML")
    else:
        await start_handler(message)

# === /publish ‚Äî –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∫–Ω–æ–ø–∫–æ–π –≤ –∫–∞–Ω–∞–ª (—Ç–æ–ª—å–∫–æ –¥–ª—è –≤–∞—Å) ===
@dp.message_handler(commands=['publish'])
async def publish_offer(message: types.Message):
    if message.from_user.id != YOUR_TELEGRAM_ID:
        return  # –¢–æ–ª—å–∫–æ –≤—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É

    markup = types.InlineKeyboardMarkup()
    markup.add(
        types.InlineKeyboardButton(
            "–ó–∞–∫–∞–∑–∞—Ç—å —Ä–∞—Å—á—ë—Ç",
            url="https://t.me/LenaMusBot?start=matrix"
        )
    )
    await bot.send_message(
        CHANNEL_USERNAME,
        "üîÆ –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π —Ä–∞—Å—á—ë—Ç –ø–æ –º–∞—Ç—Ä–∏—Ü–µ —Å—É–¥—å–±—ã!\n\n"
        "–£–∑–Ω–∞–π—Ç–µ —Å–≤–æ—ë –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ, –∫–∞—Ä–º–∏—á–µ—Å–∫–∏–µ –∑–∞–¥–∞—á–∏ –∏ —Å–∏–ª—å–Ω—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã.\n"
        "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Ä–∞—Å—á—ë—Ç.",
        reply_markup=markup
    )
    await message.answer("‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –∫–∞–Ω–∞–ª!")

# === –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ ===
if __name__ == '__main__':
    print("‚úÖ –ë–æ—Ç @LenaMusBot –∑–∞–ø—É—â–µ–Ω!")
    executor.start_polling(dp, skip_updates=True)
